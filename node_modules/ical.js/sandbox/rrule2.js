



function RecurIterator(aStart, aRule) {
  this.dtstart = aStart;
  this.rule = aRule;
  this.init();
}

// RRULE:FREQ=SECONDLY

RecurIterator.prototype = {
  dtstart: null,
  last: null,
  rule: null,

  init: function() {
    this.last = this.dtstart.clone();
    this.freq = freqMap[this.rule.freq];
    this.interval = this.rule.interval || 1;

    this.by_indices = [0,0,0]
    this.by_data = [
      this.rule.parts.BYSECOND || [],
      this.rule.parts.BYMINUTE || []
    ];
  },


  next: function() {
    nextUnitMap[this.freq].call(this);
    return this.last;
  },

  next_generic: function(unitId, unit, incthis, incnext) {
    if (this.by_data[unitId].length) {
      var dta = this.by_data[unitId];
      var idx = ++this.by_indices[unitId];
      var end_of_data = (idx == dta.length);

      if (end_of_data) {
        idx = this.by_indices[unitId] = 0;
        this.last[unit] = dta[idx];
        incnext.call(this, 1);
      } else {
        this.last[unit] = dta[idx];
      }
    } else if (this.freq == unitId) {
      incthis.call(this, this.interval);
    }
  },

  increment_generic: function(interval, unit, factor, incnext) {
    var thisval = this.last[unit] + interval;
    var nextval = (thisval / factor)|0;
    this.last[unit] = (thisval % factor)|0;
    if (nextval != 0) {
      incnext.call(this, nextval);
    }
  },

  next_second: function() {
    return this.next_generic(SECONDLY, "second",
                             this.increment_second,
                             this.increment_minute);
  },

  increment_second: function(interval) {
    return this.increment_generic(interval, "second", 60, this.increment_minute);
  },

  next_minute: function() {
    return this.next_generic(MINUTELY, "minute".
                             this.increment_minute,
                             this.increment_hour);
  },

  increment_minute: function(interval) {
    return this.increment_generic(interval, "minute", 60, this.increment_hour);
  }
};

var SECONDLY = 0;
var MINUTELY = 1;
var HOURLY = 2;
var DAILY = 3;
var WEEKLY = 4;
var MONTHLY = 5;
var YEARLY = 6;

var freqMap = {
  SECONDLY: 0,
  MINUTELY: 1,
  HOURLY: 2,
  DAILY: 3,
  WEEKLY: 4,
  MONTHLY: 5,
  YEARLY: 6
};
var nextUnitMap = [
  RecurIterator.prototype.next_second,
  RecurIterator.prototype.next_minute
]
